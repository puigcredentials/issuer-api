package es.puig.issuer.domain.model;

import es.puig.issuer.domain.model.dto.CustomCredentialOffer;
import es.puig.issuer.domain.model.dto.Grant;
import org.junit.jupiter.api.Test;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

class CustomCredentialOfferTest {

    @Test
    void testConstructorAndGetters() {
        // Arrange
        String expectedCredentialIssuer = "https://credential-issuer.example.com";
        Map<String, Grant> expectedGrants = new HashMap<>();
        Grant.TxCode expectedTxCode = new Grant.TxCode(4, "numeric", "description");
        expectedGrants.put("grant1", new Grant("type1", expectedTxCode));
        expectedGrants.put("grant2", new Grant("type2", expectedTxCode));
        List<String> expectedCredentialConfigurationIds = List.of("id1", "id2");
        // Act
        CustomCredentialOffer credentialOffer = new CustomCredentialOffer(
                expectedCredentialIssuer,
                expectedCredentialConfigurationIds,
                expectedGrants
        );
        // Assert
        assertEquals(expectedCredentialIssuer, credentialOffer.credentialIssuer());
        assertEquals(expectedGrants, credentialOffer.grants());
        assertEquals(expectedCredentialConfigurationIds, credentialOffer.credentialConfigurationIds());
    }

    @Test
    void testSetters() {
        // Arrange
        String newCredentialIssuer = "https://new-credential-issuer.example.com";
        Map<String, Grant> newGrants = new HashMap<>();
        // Act
        CustomCredentialOffer customCredentialOffer = CustomCredentialOffer.builder().credentialIssuer(newCredentialIssuer).grants(newGrants).build();
        // Assert
        assertEquals(newCredentialIssuer, customCredentialOffer.credentialIssuer());
        assertEquals(newGrants, customCredentialOffer.grants());
    }

    @Test
    void lombokGeneratedMethodsTest() {
        // Arrange
        String expectedCredentialIssuer = "https://credential-issuer.example.com";
        Map<String, Grant> expectedGrants = new HashMap<>();
        Grant.TxCode expectedTxCode = new Grant.TxCode(4, "numeric", "description");
        expectedGrants.put("grant1", new Grant("type1", expectedTxCode));
        expectedGrants.put("grant2", new Grant("type2", expectedTxCode));
        List<String> expectedCredentialConfigurationIds = List.of("id1", "id2");
        // Act
        CustomCredentialOffer offer1 = new CustomCredentialOffer(
                expectedCredentialIssuer,
                expectedCredentialConfigurationIds,
                expectedGrants
        );
        CustomCredentialOffer offer2 = new CustomCredentialOffer(
                expectedCredentialIssuer,
                expectedCredentialConfigurationIds,
                expectedGrants
        );
        // Assert
        assertEquals(offer1, offer2); // Tests equals() method generated by Lombok
        assertEquals(offer1.hashCode(), offer2.hashCode()); // Tests hashCode() method generated by Lombok
    }

}
